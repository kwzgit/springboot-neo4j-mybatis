<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.mapper.PushConditionMapper">

    <resultMap id="conditionMap" type="com.study.model.ConditionModel">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="path" column="path"/>
        <result property="relation" column="relation"/>

        <collection property="conditions" ofType="com.study.model.ConditionModel">
            <id property="id" column="id1"/>
            <result property="name" column="name1"/>
            <result property="path" column="path1"/>
            <result property="relation" column="relation1"/>
        </collection>
    </resultMap>

    <select id="firstCondition" parameterType="list" resultMap="conditionMap">
		match (h)-[r:属于|:诊断依据]->(c:Condition)
<!--        <where>-->
<!--            <if test="param1 != null ">-->
<!--                h.name in #{inputs}-->
<!--&#45;&#45;                 h.name =~ #{name}-->
<!--            </if>-->
<!--        </where>-->
        where h.name in #{inputs}
        return id(c) as id,c.name as name,c.path as path,c.relation as relation
	</select>

    <select id="secondCondition" parameterType="list" resultMap="conditionMap">
		match (n:Condition)-[r:诊断依据]->(m:Condition)
        where n.name in #{inputs}
        with m,#{newInputs} as data
        match (n)-[r:诊断依据]->(m:Condition)
        where n.name in data
        with m, count(distinct r) as sd,m.path as jundgement
        where sd>=jundgement
        return id(m) as id,m.name as name,m.path as path,m.relation as relation
	</select>

    <!--<insert id="add">
        create(u:user{name:#{model.name},age:#{model.age},sex:#{model.sex}})
    </insert>

    <update id="update">
        match (u:user)
        where id(u) = #{model.id}
        set u.name = #{model.name},u.age = #{model.age},u.sex = #{model.sex}
    </update>

    <delete id="deleteById">
        match (u:user) where id(u) = #{id} delete u
    </delete>-->

</mapper>
